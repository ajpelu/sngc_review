library("ggplot2")
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
View(rawdf)
rawdf <- rawdf %>%
mutate(aut = as.character(Authors..Primary)) %>% # Transform factor to character
arrange(Pub.Year, aut) %>% # sort by pubyear and author
mutate(key=cumsum(rep(1, n()))) # create key
d <- rawdf[, c("Authors..Primary", "Author.Address")]
names(d) <- c("authors", "address")
head(d)
head(rawdf)
View(rawdf)
jo <- rawdf %>%
group_by(Periodical.Full) %>%
summarise(count=n()) %>%
arrange(desc(count))
jo
View(jo)
jo <- rawdf %>%
group_by(Periodical.Full) %>%
summarise(count=n()) %>%
arrange(desc(count))
art_by_year <- rawdf %>%
group_by(Pub.Year) %>%
summarise(count=n()) %>%
mutate(cum=cumsum(count),
ln_sum=log(cum)) %>%
arrange(desc(Pub.Year))
ggplot(art_by_year, aes(x=Pub.Year, y=count)) +
geom_bar(stat = "identity") +
theme_bw() + ylab("n papers") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=ln_sum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=cum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=cum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("Number of papers)") + xlab("Year")
View(jo)
ggplot(art_by_year, aes(x=Pub.Year, y=count)) +
geom_bar(stat = "identity") +
theme_bw() + ylab("n papers") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=ln_sum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=cum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("Number of papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=ln_sum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
View(rawdf)
mytexto <- rawdf[215, "Abstract"]
mytexto <- rawdf[215, 13]
mytexto
re
library(koRpus) # Frequency and lexical analysis
mytoken <- tokenize(mytexto)
mytexto
mytoken <- tokenize(as.character(mytexto))
?tokenize
mytoken <- tokenize(mytexto, format = "obj")
mytoken <- tokenize(mytexto, format = "obj", lang = "en")
freq.analysis.res <- freq.analysis(mytoken, corp.freq=NULL)
freq.analysis<-taggedText(freq.analysis.res)
View(freq.analysis)
names(rawdf)
my_abstract <- rawdf[, c("Abstract", "key")]
View(my_abstract)
length(my_abstract)
length(my_abstract$Abstract)
out <- as.data.frame()
out <- data.frame()
my_abstract <- rawdf[, c("Abstract", "key")]
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
# provided that abstract is the right type
mytoken <- tokenize(my_abstract$Abstract[i],
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- my_abstract$key[i]
out <- rbind(out,df_freq_a)
}
my_abstract <- rawdf[, c("Abstract", "key")]
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
# provided that abstract is the right type
# mytoken <- tokenize(my_abstract$Abstract[i],
#                     format = "obj", lang = "en")
mytoken <- tokenize(my_abstract[i, "Abstract"],
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- my_abstract[i, "key"]
out <- rbind(out,df_freq_a)
}
length(my_abstract$Abstract)
subsetdf <- my_abstract[1,]
View(subsetdf)
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
is.null(subsetdf$Abstract)
is.na(subsetdf$Abstract)
str(rawdf$Abstract)
subsetdf$Abstract
subsetdf$Abstract[1]
as.character(subsetdf$Abstract[1])
ifelse(subsetdf$Abstract == " ", 1, 0)
my_abstract <- rawdf[, c("Abstract", "key")]
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract == " ")
{
break; } else {
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
}
View(my_abstract)
my_abstract <- rawdf[c(30,37), c("Abstract", "key")]
View(my_abstract)
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract == " ")
{
break; } else {
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
}
View(out)
my_abstract1 <- data.frame(Abstract=" ",
key=99)
my_abstract <- rbind(my_abstract, my_abstract1)
View(my_abstract)
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract == " ")
{
break; } else {
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
}
View(out)
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract != " ")
{
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
else
break; }
View(out)
names(out)
my_abstract <- rawdf[c(30,37), c("Abstract", "key")]
my_abstract1 <- data.frame(Abstract=" ",
key=99)
my_abstract <- rbind(my_abstract, my_abstract1)
out <- data.frame()
View(my_abstract)
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract != " ")
{
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
else {
outna <- data.frame(token=NA,
tag=NA,
lemma=NA,
lttr=NA,
wclass=NA,
desc=NA,
stop=NA,
stem=NA,
key=subsetdf$key)
out <- rbind(out, outna)
}
}
View(out)
my_abstract <- rawdf[, c("Abstract", "key")]
View(my_abstract)
out <- data.frame()
for (i in 1:length(my_abstract$Abstract)) {
subsetdf <- my_abstract[i,]
if(subsetdf$Abstract != " ")
{
mytoken <- tokenize(subsetdf$Abstract,
format = "obj", lang = "en")
freq_a <- freq.analysis(mytoken, corp.freq=NULL)
df_freq_a<-taggedText(freq_a)
# Add key
df_freq_a$key <- subsetdf$key
out <- rbind(out,df_freq_a)
}
else {
outna <- data.frame(token=NA,
tag=NA,
lemma=NA,
lttr=NA,
wclass=NA,
desc=NA,
stop=NA,
stem=NA,
key=subsetdf$key)
out <- rbind(out, outna)
}
}
View(out)
library(raster)
library(rgdal)
library(rgeos)
install.packages(c("rgdal", "rgeos"), dep = T, type = "source")
setwd("C:/Users/DELL/Google Drive/Instar/versiones_modelo/instar_snev/sig")
getwd()
imagenes_jp2 <- list.files(".", full.names = T, pattern = "jp2$"
imagenes_jp2 <- list.files(".", full.names = T, pattern = "jp2$")
imagenes_jp2
imagenes_tif_maria <- list.files(pattern = ".tif")
imagenes_tif_maria
imagenes_tif_maria <- list.files(".", full.names = T,pattern = ".tif")
imagenes_tif_maria
help(Lapply)
help(lapply)
View(bioP)
View(rawdf)
machine <- "/Users/ajpelu"
di <- paste(machine, "/Dropbox/Review_Sierra_Nevada/sngc_review", sep = "")
library("stringr")
library("dplyr")
library("tidyr")
library("ggplot2")
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
View(rawdf)
str(rawdf)
rawdf <- rawdf %>%
mutate(aut = as.character(Authors..Primary)) %>% # Transform factor to character
arrange(Pub.Year, aut) %>% # sort by pubyear and author
mutate(key=cumsum(rep(1, n()))) # create key
jo <- rawdf %>%
group_by(Periodical.Full) %>%
summarise(count=n()) %>%
arrange(desc(count))
art_by_year <- rawdf %>%
group_by(Pub.Year) %>%
summarise(count=n()) %>%
mutate(cum=cumsum(count),
ln_sum=log(cum)) %>%
arrange(desc(Pub.Year))
ggplot(art_by_year, aes(x=Pub.Year, y=count)) +
geom_bar(stat = "identity") +
theme_bw() + ylab("n papers") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=ln_sum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=cum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("Number of papers)") + xlab("Year")
machine <- "/Users/ajpelu"
di <- paste(machine, "/Dropbox/Review_Sierra_Nevada/sngc_review", sep = "")
library("stringr")
library("dplyr")
library("tidyr")
library("ggplot2")
# Get file names
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
art_by_year <- rawdf %>%
group_by(Pub.Year) %>%
summarise(count=n()) %>%
mutate(cum=cumsum(count),
ln_sum=log(cum)) %>%
arrange(desc(Pub.Year))
ggplot(art_by_year, aes(x=Pub.Year, y=count)) +
geom_bar(stat = "identity") +
theme_bw() + ylab("n papers") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=ln_sum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("ln (n papers)") + xlab("Year")
ggplot(art_by_year, aes(x=Pub.Year, y=cum)) +
geom_line(stat="identity", col="blue", size=1) +
geom_point(stat = "identity", col="blue", size=2.5, shape=19) +
theme_bw() + ylab("Number of papers)") + xlab("Year")
machine <- "/Users/ajpelu"
di <- paste(machine, "/Dropbox/Review_Sierra_Nevada/sngc_review", sep = "")
library("stringr")
library("dplyr")
library("tidyr")
library("ggplot2")
# Get file names
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
View(rawdf)
rawdf <- rawdf %>%
mutate(aut = as.character(Authors..Primary)) %>% # Transform factor to character
arrange(Pub.Year, aut) %>% # sort by pubyear and author
mutate(key=cumsum(rep(1, n()))) # create key
View(rawdf)
View(rawdf)
# Get file names
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
View(rawdf)
View(rawdf)
xx <- rawdf %>% arrange(Pub.Year)
View(xx)
?arrange
xx <- rawdf %>% arrange(desc(Pub.Year))
View(xx)
utdf <- read.csv(file=paste(di, "/data/wos_ut/wos_ut.txt", sep= ""),
header = TRUE,
sep = '\t')
View(utdf)
comunes <- match(xx$Authors..Primary, utdf$TI)
comunes
nomatched <- utdf[,!match(utdf$TI, xx$Title.Primary)]
nomatched <- utdf[!match(utdf$TI, xx$Title.Primary),]
nomatched <- utdf[!match(xx$Title.Primary,utdf$TI),]
View(nomatched)
nomatched <- utdf[which(utdf$TI %in% xx$Title.Primary),]
View(nomatched)
match(utdf$TI, xx$Title.Primary)
is.na(match(utdf$TI, xx$Title.Primary))
comunes <- match(xx$Title.Primary, utdf$TI)
comunes
str(xx)
str(utdf)
?matches
View(xx)
xx <- xx %>% mutate(TI = Title.Primary)
View(xx)
joined <- utdf %>% semi_join(xx, by='TI')
View(joined)
View(xx)
di <- "C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/wos_journals_categories/journals/"
library("stringr")
library("dplyr")
install.packages(dplyr)
install.packages("dplyr")
wos_ut_issn_unicos <- read.table (paste("C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/wos_ut/", "wos_ut_issn_unicos.txt", sep=""), header=T, "\t", col.names = c("Journal","ISSN"), quote = "")
Journals_X_Categories <- data.frame()
archivos <- list.files(path =di, full.names = F, pattern = "Journals_of_.*.txt$") # nombre de los archivos
archivos
for (i in archivos){
# Identificamos el nombre de la categoria
trozos <- strsplit(i, "_")[[1]] # rompe el nombre del archivo (de cada uno, es decir, de tabla) en trozos separados por _ y crea un vector con ellos
categoriatxt <- trozos[3] #llama "categoriatxt" al elemento 3 del vector
categoria <- str_replace(categoriatxt, ".txt", "") # elimina ".txt"
# A?adimos la columna "categoria" a la tabla, y la rellenamos con el nombre de la categoria, repetido tantas veces como filas haya en la tabla:
tabla <- read.table (paste(di, i, sep=""), header=T, sep=";")  # lee el archivo i como tabla
tabla$categoria <- rep(categoria, times = nrow(tabla)) # a?ade una columna llamada "categoria" a la tabla y la rellena repitiendo el nombre de la categoria en cada fila
Journals_X_Categories <- rbind(tabla,Journals_X_Categories)
}
View(Journals_X_Categories)
wos_ut_issn_unicos <- read.table (paste("C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/wos_ut/", "wos_ut_issn_unicos.txt", sep=""), header=T, "\t", col.names = c("Journal","ISSN"), quote = "")
View(wos_ut_issn_unicos)
wos_ut_issn_unicos$ISSN <- as.character(wos_ut_issn_unicos$ISSN)
Journals_X_Categories$ISSN <- as.character(Journals_X_Categories$ISSN)
issn_categorias <- left_join(wos_ut_issn_unicos, Journals_X_Categories, by="ISSN")
write.table(issn_categorias, file="C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/output/issn_categorias.txt", sep = ";",row.names = FALSE)
library(dplyr)
issn_categorias <- left_join(wos_ut_issn_unicos, Journals_X_Categories, by="ISSN")
write.table(issn_categorias, file="C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/output/issn_categorias.txt", sep = ";",row.names = FALSE)
issn_categorias <- wos_ut_issn_unicos %>%
left_join(Journals_X_Categories, by="ISSN") %>%
select(Journal,ISSN,categoria) %>%
write.table(issn_categorias, file="C:/Users/DELL/Dropbox/Review_Sierra_Nevada/sngc_review/data/output/issn_categorias.txt", sep = ";",row.names = FALSE)
# Set working directory
# machine <- "/Users/ajpelu"
# machine <- "/Users/ajpeluLap"
# Maria:
machine <- "/Users/DELL"
di <- paste(machine, "/Dropbox/Review_Sierra_Nevada/sngc_review", sep = "")
# Open packages
library("stringr")
library("dplyr")
library("tidyr")
library("ggplot2")
# Get file names
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Read raw files and loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
# Create table
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
# Create key, sorted by year (ascending) and by Authors..Primary (alphabetically)
rawdf <- rawdf %>%
mutate(aut = as.character(Authors..Primary)) %>% # Transform factor to character
arrange(Pub.Year, aut) %>% # sort by pubyear and author
mutate(key=cumsum(rep(1, n()))) # create key
# Set working directory
# machine <- "/Users/ajpelu"
# machine <- "/Users/ajpeluLap"
# Maria:
machine <- "/Users/DELL"
di <- paste(machine, "/Dropbox/Review_Sierra_Nevada/sngc_review", sep = "")
# Open packages
library("stringr")
library("dplyr")
library("tidyr")
library("ggplot2")
# Get file names
files <- list.files(path = paste(di, "/data/wos_raw/", sep= ""), pattern= "\\.txt$")
# Read raw files and loop to read files
for (j in files){
aux <- read.csv(file=paste(di, "/data/wos_raw/", j, sep= ""),
header = TRUE,
sep = '\t')
name_aux <- str_replace(j, "\\..*", "")
assign(name_aux, aux)
}
# Create table
rawdf <- rbind(bioCI, bioP, med, wos1, wos2, zoo, wos3)
# Create key, sorted by year (ascending) and by Authors..Primary (alphabetically)
rawdf <- rawdf %>%
mutate(aut = as.character(Authors..Primary)) %>% # Transform factor to character
arrange(Pub.Year, aut) %>% # sort by pubyear and author
mutate(key=cumsum(rep(1, n()))) # create key
View(rawdf)
